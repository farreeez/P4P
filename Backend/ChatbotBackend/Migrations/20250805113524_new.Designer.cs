// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatbotBackend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250805113524_new")]
    partial class @new
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ChatbotBackend.Model.Calendar", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AssessementStarted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AssessmentCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AssessmentCompletionTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssessmentMetadata")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssessmentResponses")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AssessmentStartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CalendarItems")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CognitiveActivityPreference")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentAssessmentQuestionIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentMedications")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyHistoryDementia")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastInteractionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastKnownLocation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastQuestionTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("LifestyleHabits")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalConditions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredCommunicationStyle")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryBrainHealthConcern")
                        .HasColumnType("TEXT");

                    b.Property<string>("SleepPatterns")
                        .HasColumnType("TEXT");

                    b.Property<string>("StressLevels")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ThreeWordsDisplayed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThreeWordsJson")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ThreeWordsRecalled")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
